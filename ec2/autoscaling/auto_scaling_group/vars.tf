variable "name" {
    type        = string
    description = "(Optional) The name of the Auto Scaling Group. By default generated by Terraform."
}

variable "max_size" {
    type        = number
    default     = 2
    description = "(Required) The maximum size of the Auto Scaling Group."

    validation {
      condition = var.max_size > 1
      error_message = "The auto scaling group need more than one."
    }
}

variable "min_size" {
    type        = number
    default     = 0
    description = "(Required) The minimum size of the Auto Scaling Group"
}

variable "health_check_grace_period" {
    type        = number
    default     = 300
    description = " (Optional, Default: 300) Time (in seconds) after instance comes into service before checking health"
}

variable "health_check_type" {
    type        = string
    default     = "EC2"
    description = "(Optional) EC2 or ELB. Controls how health checking is done."
}

variable "desired_capacity" {
    type        = number
    default     = 1
    description = "(Optional) The number of Amazon EC2 instances that should be running in the group."
}

variable "force_delete" {
    type        = bool
    default     = true
    description = "(Optional) Allows deleting the Auto Scaling Group without waiting for all instances in the pool to terminate. You can force an Auto Scaling Group to delete even if it's in the process of scaling a resource. Normally, Terraform drains all the instances before deleting the group. This bypasses that behavior and potentially leaves resources dangling."
}

variable "launch_configuration" {
    type = string
    description = "The launch configuration of the Auto Scaling Group"
}

variable "vpc_zone_identifier" {
    type = list(string)
    description = "(Optional) - The VPC zone identifier"
}

variable "tag" {
    type = list(object({ key=string, value=string, propagate_at_launch=bool}))
    description = "(Optional) Configuration block(s) containing resource tags."
}

